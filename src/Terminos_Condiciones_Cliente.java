/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ADMIN_01
 */
public class Terminos_Condiciones_Cliente extends javax.swing.JFrame {

    /**
     * Creates new form Terminos_Condiciones_Cliente
     */
    public Terminos_Condiciones_Cliente() {
        initComponents();
        setLocationRelativeTo(null);
        jButton1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("\nAl acceder y utilizar el software proporcionado por [Nomb, en adelante \"El Desarrollador\", usted (en adelante \"El Usuario\") acepta cumplir con los siguientes términos y condiciones.\n\nLicencia de Uso:\nEl Desarrollador otorga al Usuario una licencia no exclusiva, intransferible y limitada para utilizar el software de acuerdo con estos términos y condiciones. Esta licencia no confiere derechos de propiedad intelectual al Usuario.\n\nRestricciones de Uso:\nEl Usuario se compromete a no copiar, modificar, distribuir, vender, o sublicenciar el software, ni a realizar ingeniería inversa o descompilar el código fuente. El uso del software está destinado únicamente para fines legales y éticos.\n\nActualizaciones y Mejoras:\nEl Desarrollador se reserva el derecho de realizar actualizaciones y mejoras en el software. El Usuario acepta recibir estas actualizaciones automáticamente como parte del uso continuado del software.\n\nPrivacidad y Seguridad:\nEl Desarrollador se compromete a proteger la privacidad del Usuario y a implementar medidas de seguridad razonables. El Usuario acepta proporcionar información precisa y actualizada.\n\nSoporte Técnico:\nEl Desarrollador puede proporcionar soporte técnico según se describe en la documentación del software. El Usuario comprende que el soporte puede estar sujeto a tarifas adicionales.\n\nLimitación de Responsabilidad:\nEl Desarrollador no será responsable de daños directos, indirectos, incidentales o consecuentes que surjan del uso o la imposibilidad de usar el software, incluso si se ha informado al Desarrollador de la posibilidad de dichos daños.\n\nDerechos de Propiedad Intelectual:\nEl software, sus elementos gráficos y todos los derechos de propiedad intelectual asociados son propiedad exclusiva del Desarrollador. El Usuario acepta no eliminar ni modificar avisos de derechos de autor, marcas comerciales u otros avisos de propiedad.\n\nTerminación del Acuerdo:\nEste acuerdo puede ser terminado por cualquiera de las partes con o sin motivo. Al terminar, el Usuario debe dejar de usar el software y destruir todas las copias del mismo en su posesión.\n\nLeyes Aplicables:\nEste acuerdo se rige por las leyes del [Nombre del País/Estado] y cualquier disputa será resuelta en los tribunales competentes de [Ciudad].\n\nModificaciones a los Términos:\nEl Desarrollador se reserva el derecho de modificar estos términos y condiciones en cualquier momento. Las modificaciones serán efectivas al ser publicadas en el sitio web del Desarrollador. El uso continuado del software después de dichas modificaciones constituirá la aceptación de los nuevos términos.\n\nAl utilizar el software, el Usuario reconoce haber leído, entendido y aceptado estos términos y condiciones.\n\n");
        jScrollPane1.setViewportView(jTextArea1);

        jCheckBox1.setText("Aceptar");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cliente.png"))); // NOI18N
        jButton1.setText("ACEPTAR TERMINOS Y CONDICIONES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addGap(235, 235, 235)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton1))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        jButton1.setEnabled(true);
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        menu_cliente menu = new menu_cliente();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Terminos_Condiciones_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Terminos_Condiciones_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Terminos_Condiciones_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Terminos_Condiciones_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Terminos_Condiciones_Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
