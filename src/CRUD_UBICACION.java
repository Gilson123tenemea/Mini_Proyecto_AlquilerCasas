
import base.ReporteCliente;
import clases.Agente_inmobiliario;
import clases.CasaVacacional;
import clases.Cliente;
import clases.Ubicacion;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.query.Query;
import java.awt.Frame;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Lenovo
 */
public class CRUD_UBICACION extends javax.swing.JPanel {

    /**
     * Creates new form CRUD_UBICACION
     */
    public CRUD_UBICACION() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        provinciacombo = new javax.swing.JComboBox<>();
        ciudadcombo = new javax.swing.JComboBox<>();
        txtbarrio = new javax.swing.JTextField();
        txtcalleprincipal = new javax.swing.JTextField();
        lblcodigo = new javax.swing.JLabel();
        btnguardar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnreporte = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setText("Codigo Ubicación:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setText("Provincia:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setText("Ciudad:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setText("Barrio:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setText("Calle Principal:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));

        provinciacombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion", "Azuay", "Bolivar", "Cañar", "Carchi", "Chimborazo", "Cotopaxi", "El Oro", "Esmeraldas" }));
        add(provinciacombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 180, -1));

        ciudadcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion", "Guayaquil", "Quito", "Cuenca", "Oña", "Santo Domingo", "Durán", "Machala", "Manta", "Portoviejo", "Caluma", "Guaranda", "Azogues", "Biblian", "Tulcan", "San Gabriel", "Alausi", "Guamote", "Latacunga", "Salcedo" }));
        add(ciudadcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 180, -1));
        add(txtbarrio, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 180, -1));
        add(txtcalleprincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 180, -1));
        add(lblcodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, 180, 20));

        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/crear.png"))); // NOI18N
        btnguardar.setText("GUARDAR");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });
        add(btnguardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 120, 50));

        btnmodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mod.png"))); // NOI18N
        btnmodificar.setText("MODIFICAR");
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });
        add(btnmodificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 130, 50));

        btneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar_1.png"))); // NOI18N
        btneliminar.setText("ELIMINAR");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });
        add(btneliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, 120, 50));

        btnreporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/diapositiva.png"))); // NOI18N
        btnreporte.setText("REPORTE");
        btnreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreporteActionPerformed(evt);
            }
        });
        add(btnreporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, 130, 50));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo Ubicacion", "Provincia", "Ciudad", "Barrio", "Calle Principal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 900, 160));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 120, 50));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LOGOS DE KAME HOUSE.PNG"))); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 0, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("REGISTRAR UBICACIÓN");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:

        ObjectContainer base = Db4o.openFile(INICIO.direccion);

        crearCasa(base);
        base.close();
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        ObjectContainer base = Db4o.openFile(INICIO.direccion);
        ActualizarDatos(base);
        base.close();
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        ObjectContainer base = Db4o.openFile(INICIO.direccion);
        String codigoEliminar = JOptionPane.showInputDialog("Ingrese el código de la casa a eliminar");

        try {
            // Verificar si la ubicación tiene una Casa Vacacional asociada
            Query queryCasa = base.query();
            queryCasa.constrain(CasaVacacional.class);
            queryCasa.descend("cod_ubicacion").constrain(codigoEliminar);

            ObjectSet<CasaVacacional> resultCasa = queryCasa.execute();

            if (resultCasa.size() > 0) {
                JOptionPane.showMessageDialog(this, "No se puede eliminar la ubicación porque tiene una Casa Vacacional asociada", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Buscar y eliminar la ubicación
            Query queryUbicacion = base.query();
            queryUbicacion.constrain(Ubicacion.class);
            queryUbicacion.descend("cod_ubicacion").constrain(codigoEliminar);

            ObjectSet<Ubicacion> resultUbicacion = queryUbicacion.execute();

            if (resultUbicacion.size() > 0) {
                int resul = JOptionPane.showConfirmDialog(null, "¿Deseas eliminar los datos de la Ubicación?", "Confirmación", JOptionPane.YES_NO_OPTION);

                if (resul == JOptionPane.YES_OPTION) {
                    for (Ubicacion ubicacion : resultUbicacion) {
                        base.delete(ubicacion);
                        JOptionPane.showMessageDialog(null, "Se han borrado los datos de la Ubicación");
                        cargarTabla(base);
                    }
                } else if (resul == JOptionPane.NO_OPTION) {
                    JOptionPane.showMessageDialog(null, "Datos de la Ubicación no eliminados");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el código");
            }

            limpiar();
        } catch (Exception e) {
            e.printStackTrace(); // Manejar la excepción de manera adecuada
        } finally {
            cargarTabla(base);
            base.close();
        }

    }//GEN-LAST:event_btneliminarActionPerformed

    public void crearCasa(ObjectContainer base) {
        if (txtbarrio.getText().trim().isEmpty() || txtcalleprincipal.getText().trim().isEmpty()
                || provinciacombo.getSelectedItem() == null || ciudadcombo.getSelectedItem() == null) {

            JOptionPane.showMessageDialog(null, "Por favor llene todos los campos antes de ingresar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Query query = base.query();
            query.constrain(Ubicacion.class);
            query.descend("cod_ubicacion").orderDescending();
            ObjectSet<Ubicacion> result = query.execute();

            int ultimoCodigo = 1; // Por defecto, si no hay registros previos
            if (!result.isEmpty()) {
                Ubicacion ultimaUbicacion = result.next();
                ultimoCodigo = Integer.parseInt(ultimaUbicacion.getCod_ubicacion().substring(4)) + 1;
            }

            String nuevoCodigo = String.format("UBI-%03d", ultimoCodigo);
            lblcodigo.setText(nuevoCodigo);

            result = base.queryByExample(new Ubicacion(nuevoCodigo, null, null, null, null));

            if (!result.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ya existe una ubicación con el código ingresado.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // public Ubicacion(String cod_ubicacion, String provincia, String ciudad, String barriocalle, String principal) {
            Ubicacion nuevaUbicacion = new Ubicacion(nuevoCodigo, provinciacombo.getSelectedItem().toString(), ciudadcombo.getSelectedItem().toString(), txtbarrio.getText().trim(), txtcalleprincipal.getText().trim());
            base.store(nuevaUbicacion);

            JOptionPane.showMessageDialog(this, "Ubicación creada exitosamente");
            limpiar();
            cargarTabla(base);
        } finally {
            base.close();
        }
    }

    public void limpiar() {
        provinciacombo.setSelectedItem(0);
        ciudadcombo.setSelectedItem(0);
        txtbarrio.setText("");
        txtcalleprincipal.setText("");
        lblcodigo.setText(" ");
    }

    public void cargarTabla(ObjectContainer base) {

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de cargar los datos

        ObjectSet<Ubicacion> result = base.queryByExample(new Ubicacion());

        while (result.hasNext()) {
            Ubicacion personal1 = result.next();

            Object[] row = {
                personal1.getCod_ubicacion(),
                personal1.getProvincia(),
                personal1.getCiudad(),
                personal1.getBarriocalle(),
                personal1.getPrincipal(),};
            model.addRow(row);
        }

    }

    private void buscarUbicacion(ObjectContainer base) {
        String codigoBusqueda = JOptionPane.showInputDialog(this, "Ingrese el código de la ubicación a buscar:", "Buscar Ubicación", JOptionPane.QUESTION_MESSAGE);

        if (codigoBusqueda != null && !codigoBusqueda.isEmpty()) {
            ObjectSet<Ubicacion> result = base.queryByExample(new Ubicacion(codigoBusqueda, null, null, null, null));

            if (!result.isEmpty()) {
                Ubicacion ubicacionEncontrada = result.next();

                lblcodigo.setText(ubicacionEncontrada.getCod_ubicacion());
                provinciacombo.setSelectedItem(ubicacionEncontrada.getProvincia());
                ciudadcombo.setSelectedItem(ubicacionEncontrada.getCiudad());
                txtbarrio.setText(ubicacionEncontrada.getBarriocalle());
                txtcalleprincipal.setText(ubicacionEncontrada.getPrincipal());
                cargarDatosUbicacion(ubicacionEncontrada);

                // Limpiar la tabla y agregar solo la fila de la ubicación encontrada
                limpiarTablaUbicacion();
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                Object[] row = {
                    ubicacionEncontrada.getCod_ubicacion(),
                    ubicacionEncontrada.getProvincia(),
                    ubicacionEncontrada.getCiudad(),
                    ubicacionEncontrada.getBarriocalle(),
                    ubicacionEncontrada.getPrincipal(), // Agrega aquí los demás campos de Ubicacion que quieras mostrar
                };
                model.addRow(row);
                jTable2.setModel(model);  // Asegúrate de establecer el modelo en la tabla
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró ninguna ubicación con el código ingresado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        base.close();
    }

    private void cargarDatosUbicacion(Ubicacion ubicacion) {
        lblcodigo.setText(ubicacion.getCod_ubicacion());
        provinciacombo.setSelectedItem(ubicacion.getProvincia());
        ciudadcombo.setSelectedItem(ubicacion.getCiudad());
        txtbarrio.setText(ubicacion.getBarriocalle());
        txtcalleprincipal.setText(ubicacion.getPrincipal());
    }

    private void limpiarTablaUbicacion() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
    }

    public void cargarTablaUbicacion(ObjectContainer base) {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de cargar los datos

        ObjectSet<Ubicacion> result = base.queryByExample(new Ubicacion());

        while (result.hasNext()) {
            Ubicacion ubicacion = result.next();

            Object[] row = {
                ubicacion.getCod_ubicacion(),
                ubicacion.getProvincia(),
                ubicacion.getCiudad(),
                ubicacion.getBarriocalle(),
                ubicacion.getPrincipal()
            };
            model.addRow(row);
        }
        base.close();
    }

    public void ActualizarDatos(ObjectContainer base) {
        if (provinciacombo.getSelectedItem() == null || ciudadcombo.getSelectedItem() == null || txtbarrio.getText().trim().isEmpty() || txtcalleprincipal.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor llene en el campo del Codigo para la Modificacion", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Ubicacion miubi = new Ubicacion(lblcodigo.getText().trim(), null, null, null, null);
            ObjectSet res = base.get(miubi);
            Ubicacion miubicaci = (Ubicacion) res.next();
            miubicaci.setProvincia(provinciacombo.getSelectedItem().toString());
            miubicaci.setCiudad(ciudadcombo.getSelectedItem().toString());
            miubicaci.setBarriocalle(txtbarrio.getText().trim());
            miubicaci.setPrincipal(txtcalleprincipal.getText().trim());

            base.set(miubicaci);

            JOptionPane.showMessageDialog(this, "Modificación exitosa");
            limpiar();

        } finally {
            base.close();
        }

    }

    public void mostrarReporte(Agente_inmobiliario agente, ObjectContainer base) {
        boolean flag = true;
        ArrayList<Ubicacion> listaUbicaciones = new ArrayList<>();
        ObjectSet<Ubicacion> result = base.queryByExample(Ubicacion.class);
        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(null, "NO podemos mostrar datos estadisticas y reportes debido a que no existen registros");
            flag = false;
        } else {

        }

        if (flag) {
            while (result.hasNext()) {
                Ubicacion ubicacion = result.next();
                listaUbicaciones.add(ubicacion);
            }

            try {
                JRBeanArrayDataSource emptyDataSource = new JRBeanArrayDataSource(listaUbicaciones.toArray());
                JasperReport jr = (JasperReport) JRLoader.loadObject(getClass().getResource("/base/ReporteUbicacion.jasper"));
                JRBeanArrayDataSource ds = new JRBeanArrayDataSource(listaUbicaciones.toArray());
                InputStream inputStreamImagen = new FileInputStream(new File("src/imagenes/logokame.PNG"));

                Map<String, Object> params = new HashMap<String, Object>();

                params.put("ds", emptyDataSource);
                params.put("rutaImagen", inputStreamImagen);
                params.put("codigoAgente", agente.getCodigo_agente());
                params.put("nombreAgente", agente.getNombre());
                params.put("apellidoAgente", agente.getApellido());
                params.put("emailAgente", agente.getEmail());

                JasperPrint jp = JasperFillManager.fillReport(jr, params, ds);
                // JasperExportManager.exportReportToPdfStream(jp, out);
                JasperViewer pv = new JasperViewer(jp, false);
                pv.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

                pv.setVisible(true);

            } catch (JRException ex) {
                System.out.println("NO SE ENCONTRO LA PLANTILLA RUTA NO ENCONTRADA");
                Logger.getLogger(ReporteCliente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                System.out.println("NO SE ENCONTRO LA PLANTILLA RUTA NO ENCONTRADA DE LA IMAGEN");
                Logger.getLogger(ReporteCliente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception e) {
                System.out.println("ERROR");
                e.printStackTrace();
            }
        }
    }

    private void btnreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreporteActionPerformed
        ObjectContainer base = Db4o.openFile(INICIO.direccion);

        cargarTabla(base);
        
        mostrarReporte(Administrador_Login.agente, base);


        base.close();      // TODO add your handling code here:
    }//GEN-LAST:event_btnreporteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ObjectContainer base = Db4o.openFile(INICIO.direccion);
        buscarUbicacion(base);    
        
        base.close();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JButton btnreporte;
    private javax.swing.JComboBox<String> ciudadcombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblcodigo;
    private javax.swing.JComboBox<String> provinciacombo;
    private javax.swing.JTextField txtbarrio;
    private javax.swing.JTextField txtcalleprincipal;
    // End of variables declaration//GEN-END:variables
}
