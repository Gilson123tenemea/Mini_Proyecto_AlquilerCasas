
import base.ReporteCasa;
import base.ReporteCliente;
import clases.CasaVacacional;
import clases.Cliente;
import clases.Encabezado_Factura;
import clases.Promocion;
import clases.Propietario;
import clases.Reservar;
import clases.Servicio;
import clases.Ubicacion;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.ext.Db4oException;
import com.db4o.query.Query;
import java.awt.Frame;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ADMIN_01
 */
public class CRUD_CASAVACA extends javax.swing.JPanel {

    int pisos = 0;
    int capacidad = 0;
    int bano = 0;
    int habitaciones = 0;

    DefaultTableModel model = new DefaultTableModel();

    public CRUD_CASAVACA() {
        initComponents();
        model.setColumnIdentifiers(new String[]{"CODIGO DE CASA VACACIONAL", "DESCRIPCION", "TIPO", "NUMERO DE PISOS", "CAPACIDAD MAX", "NUMERO DE HABITACIONES", "BAÑOS", "CODIGO PROPIETARIO", "PRECIO DE ALQUILER", "DISPONIBILIDAD", "CODIGO DE UBICACION", "CODIGO DE PROMOCION", "CODIGO DE SERVICIO"});

        spnrpisos.setModel(new SpinnerNumberModel(0, 0, 60, 1));
        spnrhabitaciones.setModel(new SpinnerNumberModel(0, 0, 60, 1));
        spnrcapacidad.setModel(new SpinnerNumberModel(0, 0, 60, 1));

        spnrbano.setModel(new SpinnerNumberModel(0, 0, 60, 1));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        spnrpisos = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnguardar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnreporte = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        spnrcapacidad = new javax.swing.JSpinner();
        spnrhabitaciones = new javax.swing.JSpinner();
        spnrbano = new javax.swing.JSpinner();
        cbxtipo = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        txadescripcion = new javax.swing.JTextArea();
        cbxpropietario = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        txtprecio = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        txtcodigo = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cbxPromocion = new javax.swing.JComboBox<>();
        cboxServicio = new javax.swing.JComboBox<>();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(0, 102, 204));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(950, 650));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LOGOS DE KAME HOUSE.PNG"))); // NOI18N

        jLabel3.setText("Código Comentario:");

        jLabel4.setText("CódigoCliente:");

        jLabel5.setText("Código Casa:");

        jLabel6.setText("Descripción:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código Comentario", "Código Cliente", "Código Casa", "Descripción"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/crear.png"))); // NOI18N
        jButton1.setText("GUARDAR");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mod.png"))); // NOI18N
        jButton2.setText("MODIFICAR");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar_1.png"))); // NOI18N
        jButton3.setText("ELIMINAR");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/diapositiva.png"))); // NOI18N
        jButton4.setText("REPORTE");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        jButton5.setText("BUSCAR");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(124, 124, 124)
                        .addComponent(jButton2)
                        .addGap(144, 144, 144)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jLabel2))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(70, 70, 70))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(52, 52, 52)
                        .addComponent(jButton5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(0, 102, 204));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Comentario");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(372, 372, 372))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jPanel7.setBackground(new java.awt.Color(0, 102, 204));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(0, 102, 204));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1016, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel9.setBackground(new java.awt.Color(0, 102, 204));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(78, 78, 78))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(jTextPane1);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LOGOS DE KAME HOUSE.PNG"))); // NOI18N
        jLabel7.setText("jLabel7");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 220, 140));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setText("Codigo:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel9.setText("Descripcion:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel10.setText("Tipo:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, -1, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel11.setText("Numero Pisos:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel12.setText("Capacidad Max:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel13.setText("Numero Habitaciones:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel14.setText("Numero Baño:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));
        jPanel1.add(spnrpisos, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 100, -1));

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel16.setText("Precio de alquiler:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, -1));

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel17.setText("Propietario:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, -1, 20));

        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/crear.png"))); // NOI18N
        btnguardar.setText("GUARDAR");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnguardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 150, 40));

        btnmodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mod.png"))); // NOI18N
        btnmodificar.setText("MODIFICAR");
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnmodificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 150, -1));

        btneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar_1.png"))); // NOI18N
        btneliminar.setText("ELIMINAR");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btneliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 150, 40));

        btnreporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/diapositiva.png"))); // NOI18N
        btnreporte.setText("REPORTE");
        btnreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreporteActionPerformed(evt);
            }
        });
        jPanel1.add(btnreporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 150, 40));

        jButton12.setBackground(new java.awt.Color(255, 255, 255));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        jButton12.setBorder(null);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo de la casa", "Codigo del propietario", "Descripcion", "Codigo Ubicacion", "Capacidad", "Habitaciones", "Pisos", "Baños", "Tipo de casa", "Precio de alquiler", "Disponibilidad", "Promocion", "Servicio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 900, 130));
        jPanel1.add(spnrcapacidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 100, -1));
        jPanel1.add(spnrhabitaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, 100, -1));
        jPanel1.add(spnrbano, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 100, -1));

        cbxtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "De Bloque", "De Ladrillo", "De Piedra", "De Madera" }));
        cbxtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxtipoActionPerformed(evt);
            }
        });
        jPanel1.add(cbxtipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 160, -1));

        txadescripcion.setColumns(20);
        txadescripcion.setRows(5);
        jScrollPane5.setViewportView(txadescripcion);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 180, 70));

        cbxpropietario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxpropietarioMouseClicked(evt);
            }
        });
        cbxpropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxpropietarioActionPerformed(evt);
            }
        });
        cbxpropietario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbxpropietarioKeyTyped(evt);
            }
        });
        jPanel1.add(cbxpropietario, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 170, 130, -1));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/VER.jpg"))); // NOI18N
        jButton7.setBorder(null);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 170, -1, 20));

        txtprecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprecioActionPerformed(evt);
            }
        });
        jPanel1.add(txtprecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 60, 140, -1));

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel21.setText("Disponiblidad:");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, -1));

        jCheckBox1.setText("Si");
        jPanel1.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, 140, -1));

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel22.setText("Ubicacion:");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, -1, -1));

        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox3MouseClicked(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, 130, -1));

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/VER.jpg"))); // NOI18N
        jButton8.setBorder(null);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 230, -1, -1));
        jPanel1.add(txtcodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 170, 20));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Promocion:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Servicio:");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, -1, -1));

        cbxPromocion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxPromocionMouseClicked(evt);
            }
        });
        jPanel1.add(cbxPromocion, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 260, 130, -1));

        cboxServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboxServicioMouseClicked(evt);
            }
        });
        jPanel1.add(cboxServicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, 130, -1));

        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/VER.jpg"))); // NOI18N
        jButton11.setBorder(null);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 270, -1, -1));

        jButton13.setBackground(new java.awt.Color(255, 255, 255));
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/VER.jpg"))); // NOI18N
        jButton13.setBorder(null);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 310, -1, -1));

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel19.setText("CASA VACACIONAL");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void cbxtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxtipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxtipoActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:

        ObjectContainer base = Db4o.openFile(INICIO.direccion);

        crearCasa(base);
        base.close();
    }//GEN-LAST:event_btnguardarActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        ObjectContainer base = Db4o.openFile(INICIO.direccion);
        buscarActividad(base);
        base.close();

    }//GEN-LAST:event_jButton12ActionPerformed

    private void buscarActividad(ObjectContainer base) {
        String codigoBusqueda = JOptionPane.showInputDialog(this, "Ingrese el código de la actividad a buscar:", "Buscar Actividad", JOptionPane.QUESTION_MESSAGE);

        if (codigoBusqueda != null && !codigoBusqueda.isEmpty()) {
            ObjectSet<CasaVacacional> result = base.queryByExample(new CasaVacacional(codigoBusqueda, null, null, 0, 0, 0, 0, null, 0.0, false, null, null, null));

            if (!result.isEmpty()) {
                CasaVacacional actividadEncontrada = result.next();
                cargarDatosActividad(actividadEncontrada);
                limpiarTabla();
                cargarTabla(base);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró ninguna actividad con el código ingresado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        base.close();
    }

    // model.setColumnIdentifiers(new String[]{"CODIGO DE CASA VACACIONAL", "DESCRIPCION", "TIPO", "NUMERO DE PISOS", "CAPACIDAD MAX", "NUMERO DE HABITACIONES", "BAÑOS", "CODIGO PROPIETARIO", "PRECIO DE ALQUILER", "DISPONIBILIDAD", "CODIGO DE UBICACION", "CODIGO DE PROPIETARIO", "CODIGO DE SERVICIO"});
    private void cargarTabla(ObjectContainer base, CasaVacacional actividadFiltrada) {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

        Object[] row = {
            actividadFiltrada.getCod_casa(),
            actividadFiltrada.getNombre_casa(),
            actividadFiltrada.getTipo_casa(),
            actividadFiltrada.getNum_pisos(),
            actividadFiltrada.getCapacidad_max(),
            actividadFiltrada.getNum_habitaciones(),
            actividadFiltrada.getNum_baños(),
            actividadFiltrada.getCodigo_propie(),
            actividadFiltrada.getPrecio(),
            actividadFiltrada.isDisponibilidad(),
            actividadFiltrada.getCod_ubicacion(),
            actividadFiltrada.getCod_promocion(),
            actividadFiltrada.getCod_servicio()
        };
        model.addRow(row);

        // No cierres la base de datos aquí, hazlo después de realizar todas las operaciones necesarias
    }

    private void cargarDatosActividad(CasaVacacional actividad) {
        txtcodigo.setText(actividad.getCod_casa());
        txadescripcion.setText(actividad.getNombre_casa());
        cbxtipo.setSelectedItem(actividad.getTipo_casa());

        // Corrección para establecer valores numéricos correctamente
        spnrpisos.setValue(actividad.getNum_pisos());
        spnrcapacidad.setValue(actividad.getCapacidad_max());
        spnrhabitaciones.setValue(actividad.getNum_habitaciones());
        spnrbano.setValue(actividad.getNum_baños());

        cbxpropietario.setSelectedItem(actividad.getCodigo_propie());

        jComboBox3.setSelectedItem(actividad.getCod_ubicacion());

        cbxPromocion.setSelectedItem(actividad.getCod_promocion());

        cboxServicio.setSelectedItem(actividad.getCod_servicio());

        // Corrección para establecer el valor numérico del precio
        txtprecio.setText(String.valueOf(actividad.getPrecio()));

        // Corrección para establecer el estado de la casilla de verificación
        jCheckBox1.setSelected(actividad.isDisponibilidad());
    }

    private void limpiarTabla() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
    }

    public void cargarPropietarios() {
        ObjectContainer Base = Db4o.openFile(INICIO.direccion);
        cbxpropietario.removeAllItems();
        Query query = Base.query();
        query.constrain(Propietario.class);

        ObjectSet<Propietario> propi = query.execute();

        if (propi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen propietarios", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            while (propi.hasNext()) {
                Propietario pro = propi.next();
                cbxpropietario.addItem(pro.getCodigo_propie());
            }
        }
        Base.close();
    }

    public void cargarUbicacion() {
        ObjectContainer Base = Db4o.openFile(INICIO.direccion);
        jComboBox3.removeAllItems();
        Query query = Base.query();
        query.constrain(Ubicacion.class);

        ObjectSet<Ubicacion> ubi = query.execute();

        if (ubi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen ubicaciones ingresadas", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            while (ubi.hasNext()) {
                Ubicacion ub = ubi.next();
                jComboBox3.addItem(ub.getCod_ubicacion());
            }
        }
        Base.close();

    }

    public void cargarPromocion() {
        ObjectContainer Base = Db4o.openFile(INICIO.direccion);
        cbxPromocion.removeAllItems();
        Query query = Base.query();
        query.constrain(Promocion.class);

        ObjectSet<Promocion> pro = query.execute();

        if (pro.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen Promociones ingresadas", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            while (pro.hasNext()) {
                Promocion ub = pro.next();
                cbxPromocion.addItem(ub.getCod_promo());
            }
        }
        Base.close();

    }

    public void cargaServicio() {
        ObjectContainer Base = Db4o.openFile(INICIO.direccion);
        cboxServicio.removeAllItems();
        Query query = Base.query();
        query.constrain(Servicio.class);

        ObjectSet<Servicio> servi = query.execute();

        if (servi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen Servicios ingresados", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            while (servi.hasNext()) {
                Servicio ub = servi.next();
                cboxServicio.addItem(ub.getCodigo_servicio());  // Corregido aquí
            }
        }
        Base.close();
    }

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        ObjectContainer base = Db4o.openFile(INICIO.direccion);

        ActualizarDatos(base);
        base.close();
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
      String codigoEliminar = JOptionPane.showInputDialog("Ingrese el código de la casa a eliminar");

ObjectContainer base = Db4o.openFile(INICIO.direccion);

try {
    // Verificar si hay facturas asociadas
    Encabezado_Factura facturaAsociada = new Encabezado_Factura(null, null, null, codigoEliminar, null, 0.0, null, null, null, null);
    ObjectSet resultFactura = base.get(facturaAsociada);

    // Verificar si hay reservas asociadas
    Reservar reservaAsociada = new Reservar(null, null, codigoEliminar, null, null);
    ObjectSet resultReserva = base.get(reservaAsociada);

    if (resultFactura.size() > 0 && resultReserva.size() > 0) {
        JOptionPane.showMessageDialog(this, "No se puede eliminar esta Casa porque tiene facturas y reservas asociadas", "ERROR", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (resultFactura.size() > 0) {
        JOptionPane.showMessageDialog(this, "No se puede eliminar esta Casa porque tiene facturas asociadas", "ERROR", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (resultReserva.size() > 0) {
        JOptionPane.showMessageDialog(this, "No se puede eliminar esta Casa porque tiene reservas asociadas", "ERROR", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Buscar la casa por el código
    Query query = base.query();
    query.constrain(CasaVacacional.class);
    query.descend("cod_casa").constrain(codigoEliminar);

    ObjectSet<CasaVacacional> resultCasa = query.execute();

    if (resultCasa.size() > 0) {
        // Confirmar la eliminación
        int resul = JOptionPane.showConfirmDialog(null, "¿Deseas eliminar los datos de la Casa Vacacional?", "Confirmacion", JOptionPane.YES_NO_OPTION);

        if (resul == JOptionPane.YES_OPTION) {
            // Eliminar la Casa Vacacional de la base de datos db4o
            for (CasaVacacional vacacionalDB : resultCasa) {
                base.delete(vacacionalDB);
                JOptionPane.showMessageDialog(null, "Se están borrando los datos de la Casa Vacacional");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Datos de la Casa Vacacional no eliminados");
        }
    } else {
        JOptionPane.showMessageDialog(null, "No se encontró el código");
        cargarTabla(base);
    }
} catch (Db4oException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error al acceder a la base de datos", "ERROR", JOptionPane.ERROR_MESSAGE);
} finally {
    base.close();
}
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreporteActionPerformed
        ObjectContainer base = Db4o.openFile(INICIO.direccion);
        cargarTabla(base);
        base.close();
        Frame parentFrame = (Frame) SwingUtilities.getWindowAncestor(this);
        ReporteCasa vista = new ReporteCasa(parentFrame, true, Administrador_Login.agente);
        vista.setVisible(true);
    }//GEN-LAST:event_btnreporteActionPerformed

    private void mostrarDatosPropietarioSeleccionado(ObjectContainer bases) {
        try {
            Object selectedItem = cbxpropietario.getSelectedItem();

            if (selectedItem != null) {
                String cedulaSeleccionada = selectedItem.toString();

                Query query = bases.query();
                query.constrain(Propietario.class);
                query.descend("codigo_propie").constrain(cedulaSeleccionada);
                ObjectSet<Propietario> result = query.execute();

                if (!result.isEmpty()) {
                    Propietario propietario = result.next();
                    String mensaje = "Cédula: " + propietario.getCedula() + "\n"
                            + "Nombre: " + propietario.getNombre() + "\n"
                            + "Apellido: " + propietario.getApellido();

                    JOptionPane.showMessageDialog(this, mensaje, "Datos del Propietario", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró un propietario con la cédula seleccionada.", "Propietario no encontrado", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún código.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al mostrar datos del Propietario.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            bases.close();
        }
    }

    private void mostrarDatosUbicacionSeleccionado(ObjectContainer bases) {
        try {
            Object selectedItem = jComboBox3.getSelectedItem();

            if (selectedItem != null) {
                String codigoSelec = selectedItem.toString();

                Query query = bases.query();
                query.constrain(Ubicacion.class);
                query.descend("cod_ubicacion").constrain(codigoSelec);
                ObjectSet<Ubicacion> result = query.execute();

                if (!result.isEmpty()) {
                    Ubicacion ubica = result.next();
                    String mensaje = "Provincia: " + ubica.getProvincia() + "\n"
                            + "Ciudad: " + ubica.getCiudad() + "\n"
                            + "Barrio: " + ubica.getBarriocalle() + "\n"
                            + "Calle Principal: " + ubica.getPrincipal();

                    JOptionPane.showMessageDialog(this, mensaje, "Datos de Ubicacion", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró una ubicación con el código seleccionado.", "Ubicación no encontrada", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún código.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al mostrar datos de ubicación.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            bases.close();
        }
    }

    private void mostrarDatosPromocionSeleccionado(ObjectContainer bases) {
        try {
            int selectedIndex = cbxPromocion.getSelectedIndex();

            if (selectedIndex != -1) {
                String codigoSelec = cbxPromocion.getItemAt(selectedIndex).toString();

                Query query = bases.query();
                query.constrain(Promocion.class);
                query.descend("cod_promo").constrain(codigoSelec);
                ObjectSet<Promocion> result = query.execute();

                if (!result.isEmpty()) {
                    Promocion promo = result.next();
                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                    String mensaje = "Descuento: " + promo.getDescuento() + "%" + "\n"
                            + "Descripcion: " + promo.getDescripcion() + "\n"
                            + "Fecha Inicio: " + (promo.getFecha_inicio() != null ? sdf.format(promo.getFecha_inicio()) : "No disponible") + "\n"
                            + "Fecha Fin: " + (promo.getFecha_fin() != null ? sdf.format(promo.getFecha_fin()) : "No disponible");

                    JOptionPane.showMessageDialog(this, mensaje, "Datos de Promoción", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró una Promoción con el código seleccionado.", "Promoción no encontrada", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún código.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al mostrar datos de Promoción.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            bases.close();
        }

    }

    private void mostrarDatosServicioSeleccionado(ObjectContainer bases) {
        try {
            Object selectedItem = cboxServicio.getSelectedItem();

            if (selectedItem != null) {
                String codigoSelec = selectedItem.toString();

                Query query = bases.query();
                query.constrain(Servicio.class);
                query.descend("codigo_servicio").constrain(codigoSelec);
                ObjectSet<Servicio> result = query.execute();

                if (!result.isEmpty()) {
                    Servicio servi = result.next();
                    String mensaje = "Nombre: " + servi.getNombre_ser() + "\n"
                            + "Descripcion: " + servi.getDescripcionSer() + "\n"
                            + "Costo: " + servi.getCostoAdicional();

                    JOptionPane.showMessageDialog(this, mensaje, "Datos de Servicio", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró un Servicio con el código seleccionado.", "Servicio no encontrado", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún código.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al mostrar datos de Servicio.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            bases.close();
        }

    }


    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        ObjectContainer bases = Db4o.openFile(INICIO.direccion);
        mostrarDatosPropietarioSeleccionado(bases);
        bases.close();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        ObjectContainer bases = Db4o.openFile(INICIO.direccion);
        mostrarDatosUbicacionSeleccionado(bases);
        bases.close();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txtprecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprecioActionPerformed

    private void cbxPromocionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxPromocionMouseClicked
        cargarPromocion();
    }//GEN-LAST:event_cbxPromocionMouseClicked

    private void cboxServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboxServicioMouseClicked
        cargaServicio();
    }//GEN-LAST:event_cboxServicioMouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        ObjectContainer bases = Db4o.openFile(INICIO.direccion);
        mostrarDatosPromocionSeleccionado(bases);
        bases.close();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        ObjectContainer bases = Db4o.openFile(INICIO.direccion);
        mostrarDatosServicioSeleccionado(bases);
        bases.close();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void cbxpropietarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxpropietarioKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxpropietarioKeyTyped

    private void cbxpropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxpropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxpropietarioActionPerformed

    private void cbxpropietarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxpropietarioMouseClicked
        cargarPropietarios();
    }//GEN-LAST:event_cbxpropietarioMouseClicked

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseClicked
        cargarUbicacion();
    }//GEN-LAST:event_jComboBox3MouseClicked

    public void vaciarTabla() {
        // Obtenemos el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();

        // Borramos las filas antiguas del modelo de tabla
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    public void ActualizarDatos(ObjectContainer base) {
        // Verificar si todos los campos están llenos
        if (txadescripcion.getText().trim().isEmpty()
                || cbxtipo.getSelectedItem() == null || cbxpropietario.getSelectedItem() == null || jComboBox3.getSelectedItem() == null) {

            JOptionPane.showMessageDialog(null, "Por favor llene en el campo del Codigo para la Modificacion", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            CasaVacacional micasa = new CasaVacacional(txtcodigo.getText().trim(), null, null, 0, 0, 0, 0, null, 0.0, false, null, null, null);

            ObjectSet res = base.get(micasa);
            CasaVacacional micasita = (CasaVacacional) res.next();
            micasita.setNombre_casa(txadescripcion.getText().trim());

            // Obtener valores de los campos
            int capacidad = (int) spnrcapacidad.getValue();
            int bano = (int) spnrbano.getValue();
            int habitaciones = (int) spnrhabitaciones.getValue();
            int pisos = (int) spnrpisos.getValue();

            micasita.setCapacidad_max(capacidad);
            micasita.setNum_baños(bano);
            micasita.setNum_habitaciones(habitaciones);
            micasita.setNum_pisos(pisos);

            micasita.setCod_ubicacion(jComboBox3.getSelectedItem().toString());
            micasita.setTipo_casa(cbxtipo.getSelectedItem().toString());
            micasita.setCod_promocion(cbxPromocion.getSelectedItem().toString());
            micasita.setCod_servicio(cboxServicio.getSelectedItem().toString());

            base.set(micasita);

            JOptionPane.showMessageDialog(this, "Modificación exitosa");
            limpiar();

        } finally {
            base.close();
        }
    }

    public void crearCasa(ObjectContainer Base) {
        // Verificar si todos los campos están llenos
        if (txadescripcion.getText().trim().isEmpty()
                || cbxtipo.getSelectedItem() == null || cbxpropietario.getSelectedItem() == null || jComboBox3.getSelectedItem() == null || cboxServicio.getSelectedItem() == null) {

            JOptionPane.showMessageDialog(null, "Por favor llene todos los campos antes de ingresar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {

            Query query = Base.query();
            query.constrain(CasaVacacional.class);
            query.descend("cod_casa").orderDescending();
            ObjectSet<CasaVacacional> result = query.execute();

            int ultimoCodigo = 1;
            if (!result.isEmpty()) {
                CasaVacacional ultimoPersonal = result.next();
                ultimoCodigo = Integer.parseInt(ultimoPersonal.getCod_casa().substring(4)) + 1;
            }

            // Formatear el código con ceros a la izquierda y agregar "ACT-"
            String nuevoCodigo = String.format("CAV-%03d", ultimoCodigo);
            txtcodigo.setText(nuevoCodigo);

            // Obtener valores de los campos
            int pisos = (int) spnrpisos.getValue();
            int capacidad = (int) spnrcapacidad.getValue();
            int bano = (int) spnrbano.getValue();
            int habitaciones = (int) spnrhabitaciones.getValue();

            // Verificar si ya existe una casa con el mismo código
            ObjectSet<CasaVacacional> resul = Base.queryByExample(new CasaVacacional(nuevoCodigo, null, null, 0, 0, 0, 0, null, 0.0, false, null, null, null));

            if (!resul.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ya existe una casa con el código ingresado.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validar y obtener el valor del precio
            try {
                double precio = Double.parseDouble(txtprecio.getText().trim());
                // O, si prefieres BigDecimal:
                // BigDecimal precio = new BigDecimal(txtprecio.getText().trim());

                // String cod_casa, String Nombre_casa, String Tipo_casa, int num_pisos, int capacidad_max, int num_habitaciones, int num_baños, String codigo_propie, double precio, boolean disponibilidad, String cod_ubicacion, String cod_promocion, String cod_servicio
                CasaVacacional casa1 = new CasaVacacional(nuevoCodigo, txadescripcion.getText().trim(), cbxtipo.getSelectedItem().toString(), pisos, capacidad, habitaciones, bano, cbxpropietario.getSelectedItem().toString(), precio, jCheckBox1.isSelected(), jComboBox3.getSelectedItem().toString(), cbxPromocion.getSelectedItem().toString(), cboxServicio.getSelectedItem().toString());
                Base.store(casa1);

                JOptionPane.showMessageDialog(this, "Casa creada exitosamente");
                limpiar();
                cargarTabla(Base);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese un valor de precio válido.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } finally {
            Base.close();
        }
    }

    public void limpiar() {
        txtcodigo.setText("");
        txadescripcion.setText("");
        cbxtipo.setSelectedItem("");
        spnrbano.setValue(0);
        spnrcapacidad.setValue(0);
        spnrhabitaciones.setValue(0);
        spnrpisos.setValue(0);
        cboxServicio.setSelectedItem("");
        cbxPromocion.setSelectedItem("");
        //  txtcodigoPropi.setText(" ");
    }

    public void cargarTabla(ObjectContainer base) {
        model.setRowCount(0); // Limpiar la tabla antes de cargar los datos

        ObjectSet<CasaVacacional> result = base.queryByExample(new CasaVacacional(null, null, null, 0, 0, 0, 0, null, 0.0, false, null, null, null));

        while (result.hasNext()) {
            CasaVacacional casa = result.next();

            Object[] row = {
                casa.getCod_casa(),
                casa.getNombre_casa(),
                casa.getTipo_casa(),
                casa.getNum_pisos(),
                casa.getCapacidad_max(),
                casa.getNum_habitaciones(),
                casa.getNum_baños(),
                casa.getCodigo_propie(),
                casa.getPrecio(),
                casa.isDisponibilidad(),
                casa.getCod_ubicacion(),
                casa.getCod_promocion(),
                casa.getCod_servicio()
            };
            model.addRow(row);
        }
        jTable2.setModel(model); // Cambiado de 'jtbMostrar' a 'model'
        base.close();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JButton btnreporte;
    private javax.swing.JComboBox<String> cboxServicio;
    private javax.swing.JComboBox<String> cbxPromocion;
    private javax.swing.JComboBox<String> cbxpropietario;
    private javax.swing.JComboBox<String> cbxtipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JSpinner spnrbano;
    private javax.swing.JSpinner spnrcapacidad;
    private javax.swing.JSpinner spnrhabitaciones;
    private javax.swing.JSpinner spnrpisos;
    private javax.swing.JTextArea txadescripcion;
    private javax.swing.JLabel txtcodigo;
    private javax.swing.JTextField txtprecio;
    // End of variables declaration//GEN-END:variables
}
